#include <TimerOne.h>

float consigna = 0.75;
float D;
float error=0;
float KP = 45000;
volatile int adc ;
float percentatge;
int adc_max = 0;
int adc_min = 0;
float error_i=0;
float error_anterior=0;
float Ki=215000;
float Kd=2362;
float Ts=0.002;
float t=0;
float verif=1;


void ISR_lectura() {

  adc = analogRead(A0); ///adc serÃ  un valor entre 0 i 1023
  percentatge = (((float)adc - adc_min) / (adc_max - adc_min));
  error_anterior=error;
  error = consigna - percentatge;
  error_i=error_i+error;
  D = (KP * error)+Ki*Ts*(error_i)+Kd*(error-error_anterior)/Ts;
  if (D > 1023) {
    D = 1023;
  }
  if (D < 0) {
    D = 0;
  }
  Timer1.setPwmDuty(9, D);
  
}

void setup() {
  Serial.begin(9600); //set up port serie
  Timer1.initialize(2000);//ini timer 1 amb T=2000 micro segons
  Timer1.pwm(9, 0); //init pwm
if(verif!=0){
  D=0;
   Timer1.setPwmDuty(9, D);
  delay=100;
 adc_min =  adc = analogRead(A0);
  D=1023;
  Timer1.setPwmDuty(9, D);
  delay=100;
 adc_max =  adc = analogRead(A0);
 verif=0;
}
  Timer1.attachInterrupt(ISR_lectura);
}


void loop() {


}

